# script to try to get a smooth probability distribution function

import numpy as np
import matplotlib.pyplot as plt
from sklearn.neighbors import KernelDensity
from sklearn.model_selection import GridSearchCV
import pdb 
from scipy.stats import laplace


distances = np.array(
[[17756.038388254576],
[18752.133126805555],
[21962.417547052133],
[18434.155140857583],
[15872.064136499579],
[17645.772224850425],
[17294.284189218597],
[20093.264972818153],
[14921.951938343322],
[14555.993091820246],
[15080.96743938425],
[19454.576786658035],
[17679.3323279545],
[21305.136717895388],
[17222.94048076915],
[19288.463315212048],
[20704.76988492082],
[20703.189668380597],
[17193.670181806003],
[14092.83075441991],
[17276.575670476268],
[17276.864232304255],
[19318.366188872216],
[14116.186394798046],
[20296.354866485904],
[20703.178609393824],
[20705.493877164387],
[14616.013768781348],
[14928.509256442878],
[15009.806668692027],
[17130.80042638507],
[17040.315749060872],
[14615.488587614062],
[14621.457261155183],
[14613.135600673151],
[20295.019232720726],
[14615.757948913459],
[14607.269142746662],
[14512.663436744806],
[20061.345586099014],
[14448.531537448189],
[17389.480605144032],
[19575.09952197735],
[14380.160645659105],
[14457.075636131389],
[16712.180814032723],
[19287.204366211965],
[20529.62501092271],
[14453.9074894547],
[20529.258760112607],
[14445.764985836064],
[20101.366498547544],
[18505.70642315573],
[14445.963633458983],
[14457.736807534766],
[14453.90127088301],
[20529.092148608688],
[14453.969476196993],
[14474.56070195946],
[14094.60388984715],
[14454.01364400777],
[19017.59370479702],
[20295.705608527707],
[19584.293867960714],
[17725.669895190433],
[12447.742135923932],
[14454.319867792456],
[17448.55277078961],
[19584.33045796233],
[17251.817445443605],
[19584.874149106494],
[14523.053607048298],
[19584.29553367402],
[15626.070461783864],
[17565.838960938825],
[17797.1119027186],
[14509.529443329018],
[17589.820243375747],
[17083.3760266507],
[20663.231347239645],
[16632.349098620478],
[18137.165212119166],
[18442.997389481276],
[14418.9820608641],
[21060.670601694357],
[20663.71515430248],
[20663.48873610449],
[14979.95979313775],
[23378.817271398402],
[20431.979097117506],
[20927.317844773585],
[19012.695059242946],
[20432.023330829146],
[20432.332076130777],
[20291.43083713055],
[23377.061050282675],
[20227.643723895224],
[18136.400945943155],
[14512.347167550188],
[20927.015316804613],
[16751.68794787044],
[15622.599124121378],
[20226.11886986873],
[23378.38212963044],
[23377.873176392513],
[23377.880903616417],
[17518.39377835057],
[17924.726482032358]])

print(np.average(distances))
print(np.min(distances))
print(np.max(distances))

#fig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(10, 5))
counts, bins = np.histogram(distances, bins=10)
plt.stairs(counts, bins, fill=True)

plt.title("Histogram of Launch Distances Prior to 60,000 ft")
plt.xlabel("Distance (m)")
plt.ylabel("Frequency")

plt.show()